SIGQUIT (ctrl-\), SIGINT (ctrl-c), SIGSTP (ctrl-z)
1. for exit built in: terminate all processes in session (SID)
2. for a process to continue running in the background, its stdin FD must not be stdin but a file


ps -p $$ -o 'pid pgid sid command'

sessions (for smallsh)
setsid() will create a new session with the calling process (should be smallsh) as the session leader
this will break connection to controlling terminal
this must be done before it makes any process groups
	- on program launch?



process groups (for pipelines)
see p703 Linux Programming interface for code example:
when creating child processes (because they may be piped/redirected):
getpgid of first process = pipline PGID
setpgid of all other processes in the line 
	-before it calls exec
	-both in the parent and the child
		-because it is indeterminate which will happen first
		-the parent must ignore EACCES on this call 

implementing job control p717
